@using LonghornBank.Models
@model LonghornBank.Models.BankingTransaction

@{
    ViewBag.Title = "New Transaction";

    // Grab the Tuple from ViewBag
    Tuple<SelectList, SelectList, SelectList, SelectList> AllAccounts = ViewBag.AllAccounts;

    // Create a SelectList for Checking Accounts
    SelectList CheckingAccounts = AllAccounts.Item1;

    // Create a SelectList for Savings Accounts 
    SelectList SavingsAccounts = AllAccounts.Item2;

    // Create a SelectList for IRA
    SelectList IraAccounts = AllAccounts.Item3;

    // Create a selectlist for Stocks 
    SelectList StockAccounts = AllAccounts.Item4;
    

}

<h2>Create a New Transaction</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Banking Transaction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- 
        <div class="form-group">
            @Html.LabelFor(model => model.TransactionDispute, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TransactionDispute, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TransactionDispute, "", new { @class = "text-danger" })
            </div>
        </div>

            -->

        <div class="form-group">
            @Html.LabelFor(model => model.TransactionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--

        <div class="form-group">
            @Html.LabelFor(model => model.DisputeMessage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DisputeMessage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisputeMessage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerOpinion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerOpinion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerOpinion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorrectedAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorrectedAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorrectedAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        -->

        <div class="form-group">
            @Html.LabelFor(model => model.BankingTransactionType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.BankingTransactionType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BankingTransactionType, "", new { @class = "text-danger" })
            </div>
        </div>

        <b class="control-label col-md-2">Checking Accounts:</b> 
        @Html.DropDownList("CheckingID", CheckingAccounts, new { @class = "form-control"})
        <br />
        <br />

        <b class="control-label col-md-2">Savings Accounts:</b>
         @Html.DropDownList("SavingID", SavingsAccounts, new { @class = "form-control" })
        <br />
        <br />

        <b class="control-label col-md-2">IRA Accounts:</b>
        @Html.DropDownList("IraID", IraAccounts, new { @class = "form-control" })
        <br />
        <br />
        
        <p>If Transfering, Please Select Another Account</p>
        <b class="control-label col-md-2">Checking Accounts:</b>
        @Html.DropDownList("CheckingIDTrans", CheckingAccounts, new { @class = "form-control"})
        <br />
        <br />

        <b class="control-label col-md-2">Savings Accounts:</b>
        @Html.DropDownList("SavingIDTrans", SavingsAccounts, new { @class = "form-control" })
        <br />
        <br />

        <b class="control-label col-md-2">IRA Accounts:</b>
        @Html.DropDownList("IraIDTrans", IraAccounts, new { @class = "form-control" })
        <br />
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
