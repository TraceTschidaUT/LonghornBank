@using LonghornBank.Models;
@model IEnumerable<LonghornBank.Models.BankingTransaction>

@{
    ViewBag.Title = "Transactions";
    SelectList Ranges = ViewBag.Ranges;
    SelectList Dates = ViewBag.Dates;
    Int32 ResultsCount = ViewBag.ResultsCount;
    Int32 choice = 0;
    Int32 AccountId = 0; 
}

<h2>Branch Transactions Home</h2>


@using (Html.BeginForm("Search", "BankingTransactions", FormMethod.Get))
{

    <p class="form-group">

        <div class="row">

            <div class="col-md-6">
                Transaction Description:@Html.TextBox("SearchDescription", null, new { @class = "form-control", @placeholder = "Tax Refund" })<br />
            </div>

            <div class="col-md-6">
                Transaction Number:@Html.TextBox("SearchTransactionNumber", null, new { @class = "form-control", @placeholder = "28" })<br />
            </div>

        </div>

        <div class="container-fluid">
            <div class="row">
                <div class="form-check">
                    <div class="col-md-6">
                        <label class="form-check-label">
                            @Html.RadioButton("SelectedType", BankingTranactionType.None, true, new { @class = "form-check-input" }) All
                        </label>
                    </div>
                </div>

                <div class="form-check">
                    <div class="col-md-6">
                        <label class="form-check-label">
                            @Html.RadioButton("SelectedType", BankingTranactionType.Deposit, new { @class = "form-check-input" }) Deposit
                        </label>
                    </div>
                </div>
            </div>

            <div class="row">

                <div class="form-check">
                    <div class="col-md-6">
                        <label class="form-check-label">
                            @Html.RadioButton("SelectedType", BankingTranactionType.Withdrawl, new { @class = "form-check-input" }) Withdrawl
                        </label>
                    </div>
                </div>

                <div class="form-check">
                    <div class="col-md-6">

                        <label class="form-check-label">
                            @Html.RadioButton("SelectedType", BankingTranactionType.Transfer, new { @class = "form-check-input" }) Transfer
                        </label>
                    </div>
                </div>

            </div>
            <div class="row">

                <div class="form-check">
                    <div class="col-md-6">
                        <label class="form-check-label">
                            @Html.RadioButton("SelectedType", BankingTranactionType.Fee, new { @class = "form-check-input" }) Fee
                        </label>
                    </div>
                </div>

                <div class="form-check">
                    <div class="col-md-6">
                        <label class="form-check-label">
                            @Html.RadioButton("SelectedType", BankingTranactionType.BillPayment, new { @class = "form-check-input" }) Bill Payment
                        </label>
                    </div>
                </div>
            </div>

        </div>
    </p>

    <div class="row">

        <div class="form-check">
            <div class="col-md-4">
                Amount Range @Html.DropDownList("SearchAmountRange", Ranges, new { @class = "form-control" })
                <br />
            </div>
        </div>

        <p class="form-check">
            <div class="col-md-4">
                Start Amount Custom Range @Html.TextBox("SearchAmountBegin", null, new { @class = "form-control", @placeholder = "1000" })
                <br />
            </div>
        </p>

        <p class="form-check">
            <div class="col-md-4">
                End Amount Custom Range @Html.TextBox("SearchAmountEnd", null, new { @class = "form-control", @placeholder = "1000" })
                <br />
            </div>
        </p>

    </div>


    <div class="row">

        <div class="form-check">
            <div class="col-md-4">
                Date Range @Html.DropDownList("DateRange", Dates, new { @class = "form-control" })
                <br />
            </div>
        </div>

        <p class="form-check">
            <div class="col-md-4">
                Start Date @Html.TextBox("BeginSearchDate", null, new { @class = "form-control", @placeholder = "mm/dd/yyyy" })
                <br />
            </div>
        </p>

        <p class="form-check">
            <div class="col-md-4">
                End Date @Html.TextBox("EndSearchDate", null, new { @class = "form-control", @placeholder = "mm/dd/yyyy" })
                <br />
            </div>
        </p>

    </div>

    <div class="form-group">

        <div class="row">

            <div class="col-md-3">
                <label class="form-check-label">
                    @Html.RadioButton("SortType", SortingOption.TransIDAsc, true, new { @class = "form-check-input" }) Transaction ID Ascending
                </label>
            </div>

            <div class="col-md-3">
                <label class="form-check-label">
                    @Html.RadioButton("SortType", SortingOption.TransIDDec, new { @class = "form-check-input" }) Transaction ID Decending
                </label>
            </div>

            <div class="col-md-3">
                <label class="form-check-label">
                    @Html.RadioButton("SortType", SortingOption.TransTypeAsc, new { @class = "form-check-input" }) Transaction Type Ascending
                </label>
            </div>

            <div class="col-md-3">
                <label class="form-check-label">
                    @Html.RadioButton("SortType", SortingOption.TransTypeDec, new { @class = "form-check-input" }) Transaction Type Decending
                </label>
            </div>

        </div>

        <div class="row">

            <div class="col-md-3">
                <label class="form-check-label">
                    @Html.RadioButton("SortType", SortingOption.TransDescriptionAsc, new { @class = "form-check-input" }) Transaction Description Ascending
                </label>
            </div>

            <div class="col-md-3">
                <label class="form-check-label">
                    @Html.RadioButton("SortType", SortingOption.TransDescriptionDec, new { @class = "form-check-input" }) Transaction Description Descending
                </label>
            </div>

            <div class="col-md-3">
                <label class="form-check-label">
                    @Html.RadioButton("SortType", SortingOption.TransAmountAsc, new { @class = "form-check-input" }) Transaction Amount Ascending
                </label>
            </div>

            <div class="col-md-3">
                <label class="form-check-label">
                    @Html.RadioButton("SortType", SortingOption.TransAmountDec, new { @class = "form-check-input" }) Transaction Amount Descending
                </label>
            </div>

        </div>

        <div class="row">
            <div class="col-md-3">
                <label class="form-check-label">
                    @Html.RadioButton("SortType", SortingOption.TransDateAsc, new { @class = "form-check-input" }) Transaction Date Ascending
                </label>
            </div>

            <div class="col-md-3">
                <label class="form-check-label">
                    @Html.RadioButton("SortType", SortingOption.TransDateDec, new { @class = "form-check-input" }) Transaction Date Descending
                </label>
            </div>
        </div>

    </div>

    <div class="form-group">
        <div>
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>

}

        <p>Records: @Html.Raw(ResultsCount)</p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.BankingTransactionID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TransactionDispute)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TransactionDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Amount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DisputeMessage)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CustomerOpinion)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CorrectedAmount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BankingTransactionType)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                {
                    if (item.CheckingAccount.Count != 0)
                    {
                        choice = 1;
                        AccountId = item.CheckingAccount.FirstOrDefault().CheckingID;
                    }
                    else if (item.SavingsAccount.Count != 0)
                    {
                        choice = 2;
                        AccountId = item.SavingsAccount.FirstOrDefault().SavingID;
                    }
                    else if (item.IRAAccount.Count != 0)
                    {
                        choice = 3;
                        AccountId = item.IRAAccount.FirstOrDefault().IRAID;
                    }
                    else if (item.StockAccount != null)
                    {
                        choice = 4;
                        AccountId = item.StockAccount.StockAccountID;
                    }
                }

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.BankingTransactionID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TransactionDispute)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TransactionDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DisputeMessage)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerOpinion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CorrectedAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BankingTransactionType)
                    </td>
                    <td>
                        @Html.ActionLink("Details", "Details" , "BankingTransactions" , new { id = item.BankingTransactionID, choice = choice, AccountId = AccountId}, null)
                    </td>
                </tr>
            }

        </table>

<p>
    @ViewBag.DisplayedTransactionCount out of @ViewBag.TotalTransactionCount
</p>        
        
        <div>
            @Html.ActionLink("Back To All Accounts", "Portal", "Home")
        </div>
